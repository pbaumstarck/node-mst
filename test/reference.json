[
	"Testing 'where' ...",
	{
		"four": 16
	},
	{
		"three": 3,
		"four": 4
	},
	{
		"one": 1
	},
	{
		"one": 1,
		"two": 2
	},
	{
		"four": 16
	},
	"Testing 'select' ...",
	{
		"four": 16
	},
	{
		"one": 1,
		"two": 2,
		"three": 3,
		"four": 4
	},
	{
		"one": 1,
		"two": 4,
		"three": 9,
		"four": 16
	},
	{
		"one": 1,
		"oneone": 11,
		"two": 2,
		"twotwo": 22,
		"three": 3,
		"threethree": 33,
		"four": 4,
		"fourfour": 44
	},
	{
		"three": 3,
		"threethree": 39,
		"four": 4,
		"fourfour": 52
	},
	{
		"four": 16
	},
	"Testing 'each' ...",
	{
		"four": 16
	},
	4,
	3,
	"4> , 1, 2, 3, 4",
	", 1, 2, 3, 4",
	4,
	{
		"four": 16
	},
	"Testing 'sift' ...",
	{
		"false": {
			"one": 1,
			"two": 2
		},
		"true": {
			"three": 3,
			"four": 4
		}
	},
	{
		"true": {
			"one": 1
		},
		"null": {
			"two": 2
		},
		"undefined": {
			"three": 3
		},
		"false": {
			"four": 4
		}
	},
	"Testing 'toArray' ...",
	[
		1,
		2,
		3,
		4
	],
	[
		"one",
		"two",
		"three",
		"four"
	],
	[
		3,
		4
	],
	{
		"four": 16
	},
	"Testing 'replace' ...",
	{
		"four": 16
	},
	{
		"four": 16
	},
	{
		"four": 16
	},
	{
		"four": 16
	},
	{
		"four": 16
	},
	{
		"four": 16
	},
	{
		"four": 16
	},
	"Testing 'kernel' ...",
	"  undefined => 1 : undefined (0)",
	null,
	"  undefined => 66 : undefined (0)",
	null,
	"  0 => 1 : Array (1)",
	"  1 => 2 : Array (1)",
	"  2 => 9 : Array (1)",
	"  3 => 16 : Array (1)",
	"  4 => 25 : Array (1)",
	null,
	"  0 => 1 : Array (1)",
	"  1 => 2 : Array (1)",
	"  2 => 9,-9 : Array (1)",
	"  0 => 9 : Array (2)",
	"  1 => -9 : Array (2)",
	"  3 => 16 : Array (1)",
	"  4 => 25,-25 : Array (1)",
	"  0 => 25 : Array (2)",
	"  1 => -25 : Array (2)",
	null,
	"  a => foo : Object (1)",
	"  b => 1,2,3 : Object (1)",
	"  0 => 1 : Array (2)",
	"  1 => 2 : Array (2)",
	"  2 => 3 : Array (2)",
	"  c => [object Object] : Object (1)",
	"  dataset => glarm : Object (2)",
	"  Moose => [object Object] : Object (2)",
	"  0 => [object Object] : Array (3)",
	"  6 => 6! : Object (4)",
	"  Fie! => Upon't : Object (4)",
	null,
	"(d|dataset): glarm",
	"There are 7 literal values interred (4 for objects, and 3 for arrays)",
	"Testing 'equal' ...",
	"F: false",
	"T: true",
	"F: false",
	"T: true",
	"T: true",
	"F: false",
	"F: false",
	"T: true",
	"T: true",
	"F: false",
	"T: true",
	"F: false",
	"F: false",
	"Testing 'clone' ...",
	"1: 1",
	"foo: foo",
	"true: true",
	"[1,foo,true]: 1,foo,true",
	"  object1: 2,foo,true",
	"  object2: 1,foo,true",
	"{foo:1, bar:arr}: ",
	{
		"foo": 1,
		"bar": [
			2,
			"foo",
			true
		]
	},
	"  object1: ",
	{
		"foo": 2,
		"bar": [
			1,
			"foo",
			true
		]
	},
	"  object2: ",
	{
		"foo": 1,
		"bar": [
			2,
			"foo",
			true
		]
	},
	[
		"\"",
		"'"
	],
	[
		{
			"value": "as;ldfjka;sdlfja;sdfj asl;dkfja;skldfj;asd",
			"trimmed": "as;ldfjka;sdlfja;sdfj asl;dkfja;skldfj;asd",
			"delimiter": null
		}
	],
	"Original: as;ldfjka;sdlfja;sdfj asl;dkfja;skldfj;asd",
	"Reconst.: as;ldfjka;sdlfja;sdfj asl;dkfja;skldfj;asd",
	[
		"\"",
		"'"
	],
	[
		{
			"value": "'as;ldfjka;sdlfja;sdfj asl;dkfja;skldfj;asd'",
			"trimmed": "as;ldfjka;sdlfja;sdfj asl;dkfja;skldfj;asd",
			"delimiter": "'"
		}
	],
	"Original: 'as;ldfjka;sdlfja;sdfj asl;dkfja;skldfj;asd'",
	"Reconst.: 'as;ldfjka;sdlfja;sdfj asl;dkfja;skldfj;asd'",
	[
		"\"",
		"'"
	],
	[
		{
			"value": "\"as;ldfjka;sdlfja;sdfj asl;dkfja;skldfj;asd\"",
			"trimmed": "as;ldfjka;sdlfja;sdfj asl;dkfja;skldfj;asd",
			"delimiter": "\""
		}
	],
	"Original: \"as;ldfjka;sdlfja;sdfj asl;dkfja;skldfj;asd\"",
	"Reconst.: \"as;ldfjka;sdlfja;sdfj asl;dkfja;skldfj;asd\"",
	[
		"\"",
		"'"
	],
	[
		{
			"value": "And then ",
			"trimmed": "And then ",
			"delimiter": null
		},
		{
			"value": "'Big'",
			"trimmed": "Big",
			"delimiter": "'"
		},
		{
			"value": " jumped out and ",
			"trimmed": " jumped out and ",
			"delimiter": null
		},
		{
			"value": "\"Small \\\" came over and \"",
			"trimmed": "Small \\\" came over and ",
			"delimiter": "\""
		},
		{
			"value": " kicked ",
			"trimmed": " kicked ",
			"delimiter": null
		},
		{
			"value": "' Little \\'Tim \\' Tim '",
			"trimmed": " Little \\'Tim \\' Tim ",
			"delimiter": "'"
		},
		{
			"value": " Jenkins in the shin",
			"trimmed": " Jenkins in the shin",
			"delimiter": null
		}
	],
	"Original: And then 'Big' jumped out and \"Small \\\" came over and \" kicked ' Little \\'Tim \\' Tim ' Jenkins in the shin",
	"Reconst.: And then 'Big' jumped out and \"Small \\\" came over and \" kicked ' Little \\'Tim \\' Tim ' Jenkins in the shin",
	[
		"\"",
		"'"
	],
	[
		{
			"value": "'Single'",
			"trimmed": "Single",
			"delimiter": "'"
		},
		{
			"value": "\"Double\"",
			"trimmed": "Double",
			"delimiter": "\""
		},
		{
			"value": "''",
			"trimmed": "",
			"delimiter": "'"
		},
		{
			"value": "\"\"",
			"trimmed": "",
			"delimiter": "\""
		}
	],
	"Original: 'Single'\"Double\"''\"\"",
	"Reconst.: 'Single'\"Double\"''\"\"",
	[
		{
			"pre": "/*",
			"post": "*/"
		}
	],
	[
		{
			"value": "So i have ",
			"trimmed": "So i have ",
			"delimiter": null
		},
		{
			"value": "/* which should be a comment */",
			"trimmed": " which should be a comment ",
			"delimiter": {
				"pre": "/*",
				"post": "*/"
			}
		},
		{
			"value": " if that works //   ",
			"trimmed": " if that works //   ",
			"delimiter": null
		},
		{
			"value": "/* end end end ...",
			"trimmed": "/* end end end ...",
			"delimiter": {
				"pre": "/*",
				"post": "*/"
			}
		}
	],
	"Original: So i have /* which should be a comment */ if that works //   /* end end end ...",
	"Reconst.: So i have /* which should be a comment */ if that works //   /* end end end ...",
	[
		"\"",
		"'"
	],
	[
		{
			"value": "so ",
			"trimmed": "so ",
			"delimiter": null
		},
		{
			"value": "\"Double 'quote'\"",
			"trimmed": "Double 'quote'",
			"delimiter": "\""
		},
		{
			"value": " and ",
			"trimmed": " and ",
			"delimiter": null
		},
		{
			"value": "'single \"quote\"'",
			"trimmed": "single \"quote\"",
			"delimiter": "'"
		}
	],
	"Testing 'where' ...",
	[
		1,
		2,
		3,
		4
	],
	[
		3,
		4
	],
	[
		1
	],
	[
		1,
		2
	],
	{
		"items": [
			3,
			4
		],
		"ixes": [
			2,
			3
		]
	},
	"Testing 'select' ...",
	[
		1,
		2,
		3,
		4
	],
	[
		1,
		2,
		3,
		4
	],
	[
		1,
		4,
		9,
		16
	],
	[
		16,
		9,
		4,
		1
	],
	[
		9,
		16
	],
	[
		4,
		9
	],
	[
		9,
		4,
		1
	],
	[
		9,
		4
	],
	[
		9,
		4,
		1
	],
	[
		1,
		4,
		9
	],
	"Testing 'sift' ...",
	{
		"false": [
			1,
			2
		],
		"true": [
			3,
			4
		]
	},
	{
		"false": {
			"items": [
				1,
				2
			],
			"ixes": [
				0,
				1
			]
		},
		"true": {
			"items": [
				3,
				4
			],
			"ixes": [
				2,
				3
			]
		}
	},
	{
		"true": [
			1,
			1
		],
		"null": [
			2,
			2
		],
		"undefined": [
			3,
			3
		],
		"false": [
			4,
			4
		]
	},
	{
		"true": {
			"items": [
				1,
				1
			],
			"ixes": [
				0,
				4
			]
		},
		"null": {
			"items": [
				2,
				2
			],
			"ixes": [
				1,
				5
			]
		},
		"undefined": {
			"items": [
				3,
				3
			],
			"ixes": [
				2,
				6
			]
		},
		"false": {
			"items": [
				4,
				4
			],
			"ixes": [
				3,
				7
			]
		}
	},
	"Testing 'each' ...",
	[
		1,
		2,
		3,
		4,
		1,
		2,
		3,
		4
	],
	8,
	3,
	"-1> , 4, 3, 2, 1, 4, 3, 2, 1",
	"8> , 4, 1, 2, 3, 4",
	"6> , 4, 1, 2",
	"3> , 3, 2, 1",
	[
		0,
		0,
		0
	],
	[
		0,
		1,
		2
	],
	[
		[
			0,
			0,
			0
		],
		[
			0,
			0,
			0
		],
		[
			0,
			0,
			0
		]
	],
	[
		[
			0,
			0,
			0
		],
		[
			0,
			1,
			2
		],
		[
			0,
			2,
			4
		]
	],
	[
		[
			[
				0,
				0,
				0
			],
			[
				0,
				0,
				0
			],
			[
				0,
				0,
				0
			]
		],
		[
			[
				0,
				0,
				0
			],
			[
				0,
				0,
				0
			],
			[
				0,
				0,
				0
			]
		],
		[
			[
				0,
				0,
				0
			],
			[
				0,
				0,
				0
			],
			[
				0,
				0,
				0
			]
		]
	],
	[
		[
			[
				"0:0:0",
				"0:0:1",
				"0:0:2"
			],
			[
				"0:1:0",
				"0:1:1",
				"0:1:2"
			],
			[
				"0:2:0",
				"0:2:1",
				"0:2:2"
			]
		],
		[
			[
				"1:0:0",
				"1:0:1",
				"1:0:2"
			],
			[
				"1:1:0",
				"1:1:1",
				"1:1:2"
			],
			[
				"1:2:0",
				"1:2:1",
				"1:2:2"
			]
		],
		[
			[
				"2:0:0",
				"2:0:1",
				"2:0:2"
			],
			[
				"2:1:0",
				"2:1:1",
				"2:1:2"
			],
			[
				"2:2:0",
				"2:2:1",
				"2:2:2"
			]
		]
	],
	"0:0:0",
	"0:0:1",
	"0:0:2",
	"0:1:0",
	"0:1:1",
	"0:1:2",
	"0:2:0",
	"0:2:1",
	"0:2:2",
	"1:0:0",
	"1:0:1",
	"1:0:2",
	"1:1:0",
	"1:1:1",
	"1:1:2",
	"1:2:0",
	"1:2:1",
	"1:2:2",
	"2:0:0",
	"2:0:1",
	"2:0:2",
	"2:1:0",
	"2:1:1",
	"2:1:2",
	"2:2:0",
	"2:2:1",
	"2:2:2",
	27,
	"1, 0, Array   0",
	"2, 1, 0, Array, Array   1,0",
	"3, 1, 1, Array, Array   1,1",
	"4, 1, 2, Array, Array   1,2",
	"5, 2, 0, 0, Array, Array, Array   2,0,0",
	"6, 2, 0, 1, Array, Array, Array   2,0,1",
	"7, 2, 0, 2, Array, Array, Array   2,0,2",
	"8, 3, Array   3",
	"null, 4, Array   4",
	"9, 5, 0, 0, Array, Array, Array   5,0,0",
	"10, 5, 0, 1, Array, Array, Array   5,0,1",
	"11, 5, 0, 2, Array, Array, Array   5,0,2",
	"12, 5, 1, 0, Array, Array, Array   5,1,0",
	"13, 5, 1, 1, Array, Array, Array   5,1,1",
	"14, 5, 1, 2, Array, Array, Array   5,1,2",
	"15, 5, 2, 0, Array, Array, Array   5,2,0",
	"16, 5, 2, 1, Array, Array, Array   5,2,1",
	"17, 5, 2, 2, Array, Array, Array   5,2,2",
	"18, 5, 2, 3, 0, Array, Array, Array, Array   5,2,3,0",
	"19, 5, 2, 3, 1, Array, Array, Array, Array   5,2,3,1",
	"20, 5, 2, 3, 2, Array, Array, Array, Array   5,2,3,2",
	"21, 6, 0, Array, Array   6,0",
	"22, 6, 1, Array, Array   6,1",
	"23, 6, 2, 0, Array, Array, Array   6,2,0",
	"24, 6, 2, 1, Array, Array, Array   6,2,1",
	25,
	"Testing 'colon' ...",
	[
		0,
		1,
		2,
		3
	],
	[
		1,
		2,
		3,
		4,
		5
	],
	[
		1,
		4,
		7,
		10,
		13,
		16
	],
	[],
	[
		1,
		-2,
		-5,
		-8,
		-11,
		-14
	],
	"Testing 'separate' ...",
	[
		[
			1
		],
		[
			3,
			4,
			5
		]
	],
	[
		[
			1,
			2
		]
	],
	[
		[
			1
		],
		[
			5
		]
	],
	[],
	[
		[
			1,
			2
		],
		[
			4,
			5
		]
	],
	"Testing 'histo' ...",
	{
		"1": 1,
		"2": 1,
		"3": 1,
		"4": 1,
		"5": 1
	},
	[
		[
			"1",
			1
		],
		[
			"2",
			1
		],
		[
			"3",
			1
		],
		[
			"4",
			1
		],
		[
			"5",
			1
		]
	],
	{
		"1": 1,
		"2": 1,
		"3": 2,
		"4": 2,
		"5": 2
	},
	[
		[
			"1",
			1
		],
		[
			"2",
			1
		],
		[
			"3",
			2
		],
		[
			"4",
			2
		],
		[
			"5",
			2
		]
	],
	"Testing 'stats' ...",
	{
		"mean": 5.5,
		"sum": 55,
		"count": 10,
		"min": 1,
		"max": 10,
		"stddev": 2.8722813232690143
	},
	{
		"mean": 5.5,
		"count": 10,
		"stddev": 2.8722813232690143
	},
	{
		"mean": 1.1428571428571428,
		"sum": 8,
		"count": 7,
		"min": 1,
		"max": 2,
		"stddev": 0.34992710611188277
	},
	[
		{
			"x": 1,
			"y": -1
		},
		{
			"x": 2,
			"y": -2
		},
		{
			"x": 3,
			"y": -3
		},
		{
			"x": 4,
			"y": -4
		},
		{
			"x": 5,
			"y": -5
		},
		{
			"x": 6,
			"y": -6
		},
		{
			"x": 7,
			"y": -7
		},
		{
			"x": 8,
			"y": -8
		},
		{
			"x": 9,
			"y": -9
		},
		{
			"x": 10,
			"y": -10
		}
	],
	{
		"x": {
			"mean": 5.5,
			"sum": 55,
			"count": 10,
			"min": 1,
			"max": 10,
			"stddev": 2.8722813232690143
		},
		"y": {
			"mean": -5.5,
			"sum": -55,
			"count": 10,
			"min": -10,
			"max": -1,
			"stddev": 2.8722813232690143
		}
	},
	"Testing the aggregates ('sum', 'prod', 'any', etc.) ...",
	55,
	0,
	3628800,
	true,
	false,
	false,
	true,
	"Testing 'replace' ...",
	[
		36,
		49,
		81,
		100
	],
	[
		36,
		49,
		81,
		100
	],
	[
		36,
		49,
		81,
		100
	],
	[
		36,
		49,
		81,
		100
	],
	[
		36,
		49,
		81,
		100
	],
	[
		36,
		49,
		81,
		100
	],
	[
		36,
		49,
		81,
		100
	],
	[
		36,
		49,
		81,
		-100,
		36,
		-49,
		-81,
		100
	],
	[
		36,
		49,
		81,
		-100,
		36,
		-49,
		-81,
		100
	],
	[
		36,
		49,
		81,
		-100,
		36,
		-49,
		-81,
		100
	],
	"Testing 'shuffle' ...",
	"Did 0 ...",
	"Did 100 ...",
	"Did 200 ...",
	"Did 300 ...",
	"Did 400 ...",
	"Did 500 ...",
	"Did 600 ...",
	"Did 700 ...",
	"Did 800 ...",
	"Did 900 ...",
	"Did 1000 ...",
	"Did 1100 ...",
	"Did 1200 ...",
	"Did 1300 ...",
	"Did 1400 ...",
	"Did 1500 ...",
	"Did 1600 ...",
	"Did 1700 ...",
	"Did 1800 ...",
	"Did 1900 ...",
	"All shuffle tests passed.",
	"Testing 'subsets' ...",
	"All:",
	[
		[
			"h1"
		],
		[
			"h2"
		],
		[
			"h3"
		],
		[
			"h4"
		],
		[
			"h1",
			"h2"
		],
		[
			"h1",
			"h3"
		],
		[
			"h1",
			"h4"
		],
		[
			"h2",
			"h3"
		],
		[
			"h2",
			"h4"
		],
		[
			"h3",
			"h4"
		],
		[
			"h1",
			"h2",
			"h3"
		],
		[
			"h1",
			"h2",
			"h4"
		],
		[
			"h1",
			"h3",
			"h4"
		],
		[
			"h2",
			"h3",
			"h4"
		],
		[
			"h1",
			"h2",
			"h3",
			"h4"
		]
	],
	"1:",
	[
		[
			"h1"
		],
		[
			"h2"
		],
		[
			"h3"
		],
		[
			"h4"
		]
	],
	"2-3:",
	[
		[
			"h1",
			"h2"
		],
		[
			"h1",
			"h3"
		],
		[
			"h1",
			"h4"
		],
		[
			"h2",
			"h3"
		],
		[
			"h2",
			"h4"
		],
		[
			"h3",
			"h4"
		],
		[
			"h1",
			"h2",
			"h3"
		],
		[
			"h1",
			"h2",
			"h4"
		],
		[
			"h1",
			"h3",
			"h4"
		],
		[
			"h2",
			"h3",
			"h4"
		]
	],
	"kernel:",
	[
		"h1",
		"h2",
		"h3",
		"h4",
		"h1,h2",
		"h1,h3",
		"h1,h4",
		"h2,h3",
		"h2,h4",
		"h3,h4",
		"h1,h2,h3",
		"h1,h2,h4",
		"h1,h3,h4",
		"h2,h3,h4",
		"h1,h2,h3,h4"
	],
	"Testing 'countMat' ...",
	[],
	[
		[
			0
		]
	],
	[
		[
			0
		],
		[
			1
		]
	],
	[
		[
			0,
			0
		],
		[
			0,
			1
		],
		[
			1,
			0
		],
		[
			1,
			1
		]
	],
	[
		[
			0,
			0,
			0
		],
		[
			0,
			0,
			1
		],
		[
			0,
			0,
			2
		],
		[
			0,
			0,
			3
		],
		[
			0,
			1,
			0
		],
		[
			0,
			1,
			1
		],
		[
			0,
			1,
			2
		],
		[
			0,
			1,
			3
		],
		[
			0,
			2,
			0
		],
		[
			0,
			2,
			1
		],
		[
			0,
			2,
			2
		],
		[
			0,
			2,
			3
		],
		[
			1,
			0,
			0
		],
		[
			1,
			0,
			1
		],
		[
			1,
			0,
			2
		],
		[
			1,
			0,
			3
		],
		[
			1,
			1,
			0
		],
		[
			1,
			1,
			1
		],
		[
			1,
			1,
			2
		],
		[
			1,
			1,
			3
		],
		[
			1,
			2,
			0
		],
		[
			1,
			2,
			1
		],
		[
			1,
			2,
			2
		],
		[
			1,
			2,
			3
		]
	],
	[
		[
			0,
			0,
			0
		],
		[
			0,
			0,
			1
		],
		[
			0,
			0,
			2
		],
		[
			0,
			0,
			3
		],
		[
			0,
			0.33333,
			0
		],
		[
			0,
			0.33333,
			1
		],
		[
			0,
			0.33333,
			2
		],
		[
			0,
			0.33333,
			3
		],
		[
			0,
			0.66666,
			0
		],
		[
			0,
			0.66666,
			1
		],
		[
			0,
			0.66666,
			2
		],
		[
			0,
			0.66666,
			3
		],
		[
			0,
			0.99999,
			0
		],
		[
			0,
			0.99999,
			1
		],
		[
			0,
			0.99999,
			2
		],
		[
			0,
			0.99999,
			3
		],
		[
			1,
			0,
			0
		],
		[
			1,
			0,
			1
		],
		[
			1,
			0,
			2
		],
		[
			1,
			0,
			3
		],
		[
			1,
			0.33333,
			0
		],
		[
			1,
			0.33333,
			1
		],
		[
			1,
			0.33333,
			2
		],
		[
			1,
			0.33333,
			3
		],
		[
			1,
			0.66666,
			0
		],
		[
			1,
			0.66666,
			1
		],
		[
			1,
			0.66666,
			2
		],
		[
			1,
			0.66666,
			3
		],
		[
			1,
			0.99999,
			0
		],
		[
			1,
			0.99999,
			1
		],
		[
			1,
			0.99999,
			2
		],
		[
			1,
			0.99999,
			3
		]
	],
	"# perms: 16384",
	"Within a factor of three in time?: true",
	"Equal?: true",
	"Testing 'ulam' ...",
	"  Ulam after position 0:",
	"    0",
	"  Ulam after position 1:",
	"    01",
	"  Ulam after position 2:",
	"     2",
	"    01",
	"  Ulam after position 3:",
	"    32",
	"    01",
	"  Ulam after position 4:",
	"    432",
	"     01",
	"  Ulam after position 5:",
	"    432",
	"    501",
	"  Ulam after position 6:",
	"    432",
	"    501",
	"    6  ",
	"  Ulam after position 7:",
	"    432",
	"    501",
	"    67 ",
	"  Ulam after position 8:",
	"    432",
	"    501",
	"    678",
	"  Ulam after position 9:",
	"    432 ",
	"    501 ",
	"    6789",
	"  Ulam after position 10:",
	"    432 ",
	"    5010",
	"    6789",
	"  Ulam after position 11:",
	"    4321",
	"    5010",
	"    6789",
	"  Ulam after position 12:",
	"       2",
	"    4321",
	"    5010",
	"    6789",
	"  Ulam after position 13:",
	"      32",
	"    4321",
	"    5010",
	"    6789",
	"  Ulam after position 14:",
	"     432",
	"    4321",
	"    5010",
	"    6789",
	"  Ulam after position 15:",
	"    5432",
	"    4321",
	"    5010",
	"    6789",
	"  Ulam after position 16:",
	"    65432",
	"     4321",
	"     5010",
	"     6789",
	"  Ulam after position 17:",
	"    65432",
	"    74321",
	"     5010",
	"     6789",
	"  Ulam after position 18:",
	"    65432",
	"    74321",
	"    85010",
	"     6789",
	"  Ulam after position 19:",
	"    65432",
	"    74321",
	"    85010",
	"    96789",
	"  Ulam after position 20:",
	"    65432",
	"    74321",
	"    85010",
	"    96789",
	"    0    ",
	"  Ulam after position 21:",
	"    65432",
	"    74321",
	"    85010",
	"    96789",
	"    01   ",
	"  Ulam after position 22:",
	"    65432",
	"    74321",
	"    85010",
	"    96789",
	"    012  ",
	"  Ulam after position 23:",
	"    65432",
	"    74321",
	"    85010",
	"    96789",
	"    0123 ",
	"  Ulam after position 24:",
	"    65432",
	"    74321",
	"    85010",
	"    96789",
	"    01234",
	"  Ulam after position 25:",
	"    65432 ",
	"    74321 ",
	"    85010 ",
	"    96789 ",
	"    012345",
	"  Ulam after position 26:",
	"    65432 ",
	"    74321 ",
	"    85010 ",
	"    967896",
	"    012345",
	"  Ulam after position 27:",
	"    65432 ",
	"    74321 ",
	"    850107",
	"    967896",
	"    012345",
	"  Ulam after position 28:",
	"    65432 ",
	"    743218",
	"    850107",
	"    967896",
	"    012345",
	"  Ulam after position 29:",
	"    654329",
	"    743218",
	"    850107",
	"    967896",
	"    012345",
	"  Ulam after position 30:",
	"         0",
	"    654329",
	"    743218",
	"    850107",
	"    967896",
	"    012345",
	"  Ulam after position 31:",
	"        10",
	"    654329",
	"    743218",
	"    850107",
	"    967896",
	"    012345",
	"  Ulam after position 32:",
	"       210",
	"    654329",
	"    743218",
	"    850107",
	"    967896",
	"    012345",
	"  Ulam after position 33:",
	"      3210",
	"    654329",
	"    743218",
	"    850107",
	"    967896",
	"    012345",
	"  Ulam after position 34:",
	"     43210",
	"    654329",
	"    743218",
	"    850107",
	"    967896",
	"    012345",
	"  Ulam after position 35:",
	"    543210",
	"    654329",
	"    743218",
	"    850107",
	"    967896",
	"    012345",
	"  Ulam after position 36:",
	"    6543210",
	"     654329",
	"     743218",
	"     850107",
	"     967896",
	"     012345",
	"  Ulam after position 37:",
	"    6543210",
	"    7654329",
	"     743218",
	"     850107",
	"     967896",
	"     012345",
	"  Ulam after position 38:",
	"    6543210",
	"    7654329",
	"    8743218",
	"     850107",
	"     967896",
	"     012345",
	"  Ulam after position 39:",
	"    6543210",
	"    7654329",
	"    8743218",
	"    9850107",
	"     967896",
	"     012345",
	"  Ulam after position 40:",
	"    6543210",
	"    7654329",
	"    8743218",
	"    9850107",
	"    0967896",
	"     012345",
	"  Ulam after position 41:",
	"    6543210",
	"    7654329",
	"    8743218",
	"    9850107",
	"    0967896",
	"    1012345",
	"  Ulam after position 42:",
	"    6543210",
	"    7654329",
	"    8743218",
	"    9850107",
	"    0967896",
	"    1012345",
	"    2      ",
	"  Ulam after position 43:",
	"    6543210",
	"    7654329",
	"    8743218",
	"    9850107",
	"    0967896",
	"    1012345",
	"    23     ",
	"  Ulam after position 44:",
	"    6543210",
	"    7654329",
	"    8743218",
	"    9850107",
	"    0967896",
	"    1012345",
	"    234    ",
	"  Ulam after position 45:",
	"    6543210",
	"    7654329",
	"    8743218",
	"    9850107",
	"    0967896",
	"    1012345",
	"    2345   ",
	"  Ulam after position 46:",
	"    6543210",
	"    7654329",
	"    8743218",
	"    9850107",
	"    0967896",
	"    1012345",
	"    23456  ",
	"  Ulam after position 47:",
	"    6543210",
	"    7654329",
	"    8743218",
	"    9850107",
	"    0967896",
	"    1012345",
	"    234567 ",
	"  Ulam after position 48:",
	"    6543210",
	"    7654329",
	"    8743218",
	"    9850107",
	"    0967896",
	"    1012345",
	"    2345678",
	"  Ulam after position 49:",
	"    6543210 ",
	"    7654329 ",
	"    8743218 ",
	"    9850107 ",
	"    0967896 ",
	"    1012345 ",
	"    23456789",
	"  Ulam after position 50:",
	"    6543210 ",
	"    7654329 ",
	"    8743218 ",
	"    9850107 ",
	"    0967896 ",
	"    10123450",
	"    23456789",
	"  Ulam after position 51:",
	"    6543210 ",
	"    7654329 ",
	"    8743218 ",
	"    9850107 ",
	"    09678961",
	"    10123450",
	"    23456789",
	"  Ulam after position 52:",
	"    6543210 ",
	"    7654329 ",
	"    8743218 ",
	"    98501072",
	"    09678961",
	"    10123450",
	"    23456789",
	"  Ulam after position 53:",
	"    6543210 ",
	"    7654329 ",
	"    87432183",
	"    98501072",
	"    09678961",
	"    10123450",
	"    23456789",
	"  Ulam after position 54:",
	"    6543210 ",
	"    76543294",
	"    87432183",
	"    98501072",
	"    09678961",
	"    10123450",
	"    23456789",
	"  Ulam after position 55:",
	"    65432105",
	"    76543294",
	"    87432183",
	"    98501072",
	"    09678961",
	"    10123450",
	"    23456789",
	"  Ulam after position 56:",
	"           6",
	"    65432105",
	"    76543294",
	"    87432183",
	"    98501072",
	"    09678961",
	"    10123450",
	"    23456789",
	"  Ulam after position 57:",
	"          76",
	"    65432105",
	"    76543294",
	"    87432183",
	"    98501072",
	"    09678961",
	"    10123450",
	"    23456789",
	"  Ulam after position 58:",
	"         876",
	"    65432105",
	"    76543294",
	"    87432183",
	"    98501072",
	"    09678961",
	"    10123450",
	"    23456789",
	"  Ulam after position 59:",
	"        9876",
	"    65432105",
	"    76543294",
	"    87432183",
	"    98501072",
	"    09678961",
	"    10123450",
	"    23456789",
	"  Ulam after position 60:",
	"       09876",
	"    65432105",
	"    76543294",
	"    87432183",
	"    98501072",
	"    09678961",
	"    10123450",
	"    23456789",
	"  Ulam after position 61:",
	"      109876",
	"    65432105",
	"    76543294",
	"    87432183",
	"    98501072",
	"    09678961",
	"    10123450",
	"    23456789",
	"  Ulam after position 62:",
	"     2109876",
	"    65432105",
	"    76543294",
	"    87432183",
	"    98501072",
	"    09678961",
	"    10123450",
	"    23456789",
	"  Ulam after position 63:",
	"    32109876",
	"    65432105",
	"    76543294",
	"    87432183",
	"    98501072",
	"    09678961",
	"    10123450",
	"    23456789",
	"  Ulam after position 64:",
	"    432109876",
	"     65432105",
	"     76543294",
	"     87432183",
	"     98501072",
	"     09678961",
	"     10123450",
	"     23456789",
	"  Ulam after position 65:",
	"    432109876",
	"    565432105",
	"     76543294",
	"     87432183",
	"     98501072",
	"     09678961",
	"     10123450",
	"     23456789",
	"  Ulam after position 66:",
	"    432109876",
	"    565432105",
	"    676543294",
	"     87432183",
	"     98501072",
	"     09678961",
	"     10123450",
	"     23456789",
	"  Ulam after position 67:",
	"    432109876",
	"    565432105",
	"    676543294",
	"    787432183",
	"     98501072",
	"     09678961",
	"     10123450",
	"     23456789",
	"  Ulam after position 68:",
	"    432109876",
	"    565432105",
	"    676543294",
	"    787432183",
	"    898501072",
	"     09678961",
	"     10123450",
	"     23456789",
	"  Ulam after position 69:",
	"    432109876",
	"    565432105",
	"    676543294",
	"    787432183",
	"    898501072",
	"    909678961",
	"     10123450",
	"     23456789",
	"  Ulam after position 70:",
	"    432109876",
	"    565432105",
	"    676543294",
	"    787432183",
	"    898501072",
	"    909678961",
	"    010123450",
	"     23456789",
	"  Ulam after position 71:",
	"    432109876",
	"    565432105",
	"    676543294",
	"    787432183",
	"    898501072",
	"    909678961",
	"    010123450",
	"    123456789",
	"  Ulam after position 72:",
	"    432109876",
	"    565432105",
	"    676543294",
	"    787432183",
	"    898501072",
	"    909678961",
	"    010123450",
	"    123456789",
	"    2        ",
	"  Ulam after position 73:",
	"    432109876",
	"    565432105",
	"    676543294",
	"    787432183",
	"    898501072",
	"    909678961",
	"    010123450",
	"    123456789",
	"    23       ",
	"  Ulam after position 74:",
	"    432109876",
	"    565432105",
	"    676543294",
	"    787432183",
	"    898501072",
	"    909678961",
	"    010123450",
	"    123456789",
	"    234      ",
	"  Ulam after position 75:",
	"    432109876",
	"    565432105",
	"    676543294",
	"    787432183",
	"    898501072",
	"    909678961",
	"    010123450",
	"    123456789",
	"    2345     ",
	"  Ulam after position 76:",
	"    432109876",
	"    565432105",
	"    676543294",
	"    787432183",
	"    898501072",
	"    909678961",
	"    010123450",
	"    123456789",
	"    23456    ",
	"  Ulam after position 77:",
	"    432109876",
	"    565432105",
	"    676543294",
	"    787432183",
	"    898501072",
	"    909678961",
	"    010123450",
	"    123456789",
	"    234567   ",
	"  Ulam after position 78:",
	"    432109876",
	"    565432105",
	"    676543294",
	"    787432183",
	"    898501072",
	"    909678961",
	"    010123450",
	"    123456789",
	"    2345678  ",
	"  Ulam after position 79:",
	"    432109876",
	"    565432105",
	"    676543294",
	"    787432183",
	"    898501072",
	"    909678961",
	"    010123450",
	"    123456789",
	"    23456789 ",
	"  Ulam after position 80:",
	"    432109876",
	"    565432105",
	"    676543294",
	"    787432183",
	"    898501072",
	"    909678961",
	"    010123450",
	"    123456789",
	"    234567890",
	"  Ulam after position 81:",
	"    432109876 ",
	"    565432105 ",
	"    676543294 ",
	"    787432183 ",
	"    898501072 ",
	"    909678961 ",
	"    010123450 ",
	"    123456789 ",
	"    2345678901",
	"  Ulam after position 82:",
	"    432109876 ",
	"    565432105 ",
	"    676543294 ",
	"    787432183 ",
	"    898501072 ",
	"    909678961 ",
	"    010123450 ",
	"    1234567892",
	"    2345678901",
	"  Ulam after position 83:",
	"    432109876 ",
	"    565432105 ",
	"    676543294 ",
	"    787432183 ",
	"    898501072 ",
	"    909678961 ",
	"    0101234503",
	"    1234567892",
	"    2345678901",
	"  Ulam after position 84:",
	"    432109876 ",
	"    565432105 ",
	"    676543294 ",
	"    787432183 ",
	"    898501072 ",
	"    9096789614",
	"    0101234503",
	"    1234567892",
	"    2345678901",
	"  Ulam after position 85:",
	"    432109876 ",
	"    565432105 ",
	"    676543294 ",
	"    787432183 ",
	"    8985010725",
	"    9096789614",
	"    0101234503",
	"    1234567892",
	"    2345678901",
	"  Ulam after position 86:",
	"    432109876 ",
	"    565432105 ",
	"    676543294 ",
	"    7874321836",
	"    8985010725",
	"    9096789614",
	"    0101234503",
	"    1234567892",
	"    2345678901",
	"  Ulam after position 87:",
	"    432109876 ",
	"    565432105 ",
	"    6765432947",
	"    7874321836",
	"    8985010725",
	"    9096789614",
	"    0101234503",
	"    1234567892",
	"    2345678901",
	"  Ulam after position 88:",
	"    432109876 ",
	"    5654321058",
	"    6765432947",
	"    7874321836",
	"    8985010725",
	"    9096789614",
	"    0101234503",
	"    1234567892",
	"    2345678901",
	"  Ulam after position 89:",
	"    4321098769",
	"    5654321058",
	"    6765432947",
	"    7874321836",
	"    8985010725",
	"    9096789614",
	"    0101234503",
	"    1234567892",
	"    2345678901",
	"  Ulam after position 90:",
	"             0",
	"    4321098769",
	"    5654321058",
	"    6765432947",
	"    7874321836",
	"    8985010725",
	"    9096789614",
	"    0101234503",
	"    1234567892",
	"    2345678901",
	"  Ulam after position 91:",
	"            10",
	"    4321098769",
	"    5654321058",
	"    6765432947",
	"    7874321836",
	"    8985010725",
	"    9096789614",
	"    0101234503",
	"    1234567892",
	"    2345678901",
	"  Ulam after position 92:",
	"           210",
	"    4321098769",
	"    5654321058",
	"    6765432947",
	"    7874321836",
	"    8985010725",
	"    9096789614",
	"    0101234503",
	"    1234567892",
	"    2345678901",
	"  Ulam after position 93:",
	"          3210",
	"    4321098769",
	"    5654321058",
	"    6765432947",
	"    7874321836",
	"    8985010725",
	"    9096789614",
	"    0101234503",
	"    1234567892",
	"    2345678901",
	"  Ulam after position 94:",
	"         43210",
	"    4321098769",
	"    5654321058",
	"    6765432947",
	"    7874321836",
	"    8985010725",
	"    9096789614",
	"    0101234503",
	"    1234567892",
	"    2345678901",
	"  Ulam after position 95:",
	"        543210",
	"    4321098769",
	"    5654321058",
	"    6765432947",
	"    7874321836",
	"    8985010725",
	"    9096789614",
	"    0101234503",
	"    1234567892",
	"    2345678901",
	"  Ulam after position 96:",
	"       6543210",
	"    4321098769",
	"    5654321058",
	"    6765432947",
	"    7874321836",
	"    8985010725",
	"    9096789614",
	"    0101234503",
	"    1234567892",
	"    2345678901",
	"  Ulam after position 97:",
	"      76543210",
	"    4321098769",
	"    5654321058",
	"    6765432947",
	"    7874321836",
	"    8985010725",
	"    9096789614",
	"    0101234503",
	"    1234567892",
	"    2345678901",
	"  Ulam after position 98:",
	"     876543210",
	"    4321098769",
	"    5654321058",
	"    6765432947",
	"    7874321836",
	"    8985010725",
	"    9096789614",
	"    0101234503",
	"    1234567892",
	"    2345678901",
	"  Ulam after position 99:",
	"    9876543210",
	"    4321098769",
	"    5654321058",
	"    6765432947",
	"    7874321836",
	"    8985010725",
	"    9096789614",
	"    0101234503",
	"    1234567892",
	"    2345678901",
	"-2.5: 0",
	"-2: 0",
	"-1.5: -0.25",
	"-1: -0.5",
	"-0.5: -0.75",
	"-0.00001: -0.999995",
	"0: 0",
	"0.00001: 0.999995",
	"0.5: 0.75",
	"1: 0.5",
	"1.5: 0.25",
	"2: 0",
	"2.5: 0",
	"-2.5: #ff0000",
	"-2: #ff0000",
	"-1.5: #d50000",
	"-1: #aa0000",
	"-0.5: #800000",
	"-0.00001: #550000",
	"0: #555555",
	"0.00001: #000055",
	"0.5: #000080",
	"1: #0000aa",
	"1.5: #0000d5",
	"2: #0000ff",
	"2.5: #0000ff"
]